spring.datasource.url=${db-url}
spring.datasource.username=${db-user}
spring.datasource.password=${db-password}

etherscanner.start-block-dir=last-blocks-snapshot
etherscanner.eos.rpc-url.mainnet=http://127.0.0.1:8887
etherscanner.eos.tcp-url.mainnet=tcp://127.0.0.1:56732
#etherscanner.tron.full-rpc-url.mainnet=http://148.251.77.50:28893
#etherscanner.tron.event-rpc-url.mainnet=http://148.251.77.50:28892
#etherscanner.tron.full-rpc-url.testnet=http://148.251.77.50:8090
#etherscanner.tron.event-rpc-url.testnet=http://148.251.77.50:28891
# enable EOS pending scanner

# enable EOS subscription
etherscanner.eos.subscription.mainnet=true
etherscanner.eos.subscription.testnet=true

# enable db persisters. if false, file persister will be used
etherscanner.eos.db-persister=false
etherscanner.ethereum.db-persister=false
etherscanner.tron.db-persister=false

# connect to remote address timeout
io.lastwill.eventscan.backend.connection-timeout=10000
# wait free connection in pool timeout
io.lastwill.eventscan.backend.get-connection-timeout=10000
# read/write to remote socket timeout
io.lastwill.eventscan.backend.socket-timeout=5000
io.lastwill.eventscan.commit-chain-length=5
# Check new block interval in ms
io.lastwill.eventscan.polling-interval-ms=5000

#eos-register-address=eostronlinke
eos-register-address=kolyankolyan
#eth-register-address=0x75d2befc8d167cf8a6af89fdef944bb12bfb87b0
eth-register-address=0x83d06a33f9bfd9b66a07052dd6830b82ac95b353
#tron-register-address=41fe20a0f410e5fbe0ebbc47ff4e965aded601acda
tron-register-address=418a6386479dbb3063eabb3d6fa92ed376ab06ee14

eosish-account=sdfsdf
wish-address=0x123123123

eos-reg-contract-created-block=123
eth-reg-contract-created-block=123
tron-reg-contract-created-block=123

eosish-contract-created-block=1231
wish-contract-created-block=1231

eos-snapshot-block=124
eth-snapshot-block=223
tron-snapshot-block=234
